import { FieldPolicy, FieldReadFunction, TypePolicies, TypePolicy } from '@apollo/client/cache';

/**
 *  ⚠️ DO NOT EDIT ⚠️
 *  This file is automatically generated, run "yarn codegen" to update
 */

export type QueryKeySpecifier = (
  | 'pokemonById'
  | 'pokemonByName'
  | 'pokemons'
  | 'pokemonTypes'
  | QueryKeySpecifier
)[];
export type QueryFieldPolicy = {
  pokemonById?: FieldPolicy<any> | FieldReadFunction<any>;
  pokemonByName?: FieldPolicy<any> | FieldReadFunction<any>;
  pokemons?: FieldPolicy<any> | FieldReadFunction<any>;
  pokemonTypes?: FieldPolicy<any> | FieldReadFunction<any>;
};
export type PokemonKeySpecifier = (
  | 'attacks'
  | 'classification'
  | 'evolutionRequirements'
  | 'evolutions'
  | 'fleeRate'
  | 'height'
  | 'id'
  | 'image'
  | 'isFavorite'
  | 'maxCP'
  | 'maxHP'
  | 'name'
  | 'number'
  | 'resistant'
  | 'sound'
  | 'types'
  | 'weaknesses'
  | 'weight'
  | PokemonKeySpecifier
)[];
export type PokemonFieldPolicy = {
  attacks?: FieldPolicy<any> | FieldReadFunction<any>;
  classification?: FieldPolicy<any> | FieldReadFunction<any>;
  evolutionRequirements?: FieldPolicy<any> | FieldReadFunction<any>;
  evolutions?: FieldPolicy<any> | FieldReadFunction<any>;
  fleeRate?: FieldPolicy<any> | FieldReadFunction<any>;
  height?: FieldPolicy<any> | FieldReadFunction<any>;
  id?: FieldPolicy<any> | FieldReadFunction<any>;
  image?: FieldPolicy<any> | FieldReadFunction<any>;
  isFavorite?: FieldPolicy<any> | FieldReadFunction<any>;
  maxCP?: FieldPolicy<any> | FieldReadFunction<any>;
  maxHP?: FieldPolicy<any> | FieldReadFunction<any>;
  name?: FieldPolicy<any> | FieldReadFunction<any>;
  number?: FieldPolicy<any> | FieldReadFunction<any>;
  resistant?: FieldPolicy<any> | FieldReadFunction<any>;
  sound?: FieldPolicy<any> | FieldReadFunction<any>;
  types?: FieldPolicy<any> | FieldReadFunction<any>;
  weaknesses?: FieldPolicy<any> | FieldReadFunction<any>;
  weight?: FieldPolicy<any> | FieldReadFunction<any>;
};
export type PokemonAttackKeySpecifier = ('fast' | 'special' | PokemonAttackKeySpecifier)[];
export type PokemonAttackFieldPolicy = {
  fast?: FieldPolicy<any> | FieldReadFunction<any>;
  special?: FieldPolicy<any> | FieldReadFunction<any>;
};
export type AttackKeySpecifier = ('damage' | 'name' | 'type' | AttackKeySpecifier)[];
export type AttackFieldPolicy = {
  damage?: FieldPolicy<any> | FieldReadFunction<any>;
  name?: FieldPolicy<any> | FieldReadFunction<any>;
  type?: FieldPolicy<any> | FieldReadFunction<any>;
};
export type PokemonEvolutionRequirementKeySpecifier = (
  | 'amount'
  | 'name'
  | PokemonEvolutionRequirementKeySpecifier
)[];
export type PokemonEvolutionRequirementFieldPolicy = {
  amount?: FieldPolicy<any> | FieldReadFunction<any>;
  name?: FieldPolicy<any> | FieldReadFunction<any>;
};
export type PokemonDimensionKeySpecifier = ('maximum' | 'minimum' | PokemonDimensionKeySpecifier)[];
export type PokemonDimensionFieldPolicy = {
  maximum?: FieldPolicy<any> | FieldReadFunction<any>;
  minimum?: FieldPolicy<any> | FieldReadFunction<any>;
};
export type PokemonConnectionKeySpecifier = (
  | 'count'
  | 'edges'
  | 'limit'
  | 'offset'
  | PokemonConnectionKeySpecifier
)[];
export type PokemonConnectionFieldPolicy = {
  count?: FieldPolicy<any> | FieldReadFunction<any>;
  edges?: FieldPolicy<any> | FieldReadFunction<any>;
  limit?: FieldPolicy<any> | FieldReadFunction<any>;
  offset?: FieldPolicy<any> | FieldReadFunction<any>;
};
export type MutationKeySpecifier = (
  | 'favoritePokemon'
  | 'unFavoritePokemon'
  | MutationKeySpecifier
)[];
export type MutationFieldPolicy = {
  favoritePokemon?: FieldPolicy<any> | FieldReadFunction<any>;
  unFavoritePokemon?: FieldPolicy<any> | FieldReadFunction<any>;
};
export type RootKeySpecifier = ('query' | RootKeySpecifier)[];
export type RootFieldPolicy = {
  query?: FieldPolicy<any> | FieldReadFunction<any>;
};
export type StrictTypedTypePolicies = {
  Query?: Omit<TypePolicy, 'fields' | 'keyFields'> & {
    keyFields?: false | QueryKeySpecifier | (() => undefined | QueryKeySpecifier);
    fields?: QueryFieldPolicy;
  };
  Pokemon?: Omit<TypePolicy, 'fields' | 'keyFields'> & {
    keyFields?: false | PokemonKeySpecifier | (() => undefined | PokemonKeySpecifier);
    fields?: PokemonFieldPolicy;
  };
  PokemonAttack?: Omit<TypePolicy, 'fields' | 'keyFields'> & {
    keyFields?: false | PokemonAttackKeySpecifier | (() => undefined | PokemonAttackKeySpecifier);
    fields?: PokemonAttackFieldPolicy;
  };
  Attack?: Omit<TypePolicy, 'fields' | 'keyFields'> & {
    keyFields?: false | AttackKeySpecifier | (() => undefined | AttackKeySpecifier);
    fields?: AttackFieldPolicy;
  };
  PokemonEvolutionRequirement?: Omit<TypePolicy, 'fields' | 'keyFields'> & {
    keyFields?:
      | false
      | PokemonEvolutionRequirementKeySpecifier
      | (() => undefined | PokemonEvolutionRequirementKeySpecifier);
    fields?: PokemonEvolutionRequirementFieldPolicy;
  };
  PokemonDimension?: Omit<TypePolicy, 'fields' | 'keyFields'> & {
    keyFields?:
      | false
      | PokemonDimensionKeySpecifier
      | (() => undefined | PokemonDimensionKeySpecifier);
    fields?: PokemonDimensionFieldPolicy;
  };
  PokemonConnection?: Omit<TypePolicy, 'fields' | 'keyFields'> & {
    keyFields?:
      | false
      | PokemonConnectionKeySpecifier
      | (() => undefined | PokemonConnectionKeySpecifier);
    fields?: PokemonConnectionFieldPolicy;
  };
  Mutation?: Omit<TypePolicy, 'fields' | 'keyFields'> & {
    keyFields?: false | MutationKeySpecifier | (() => undefined | MutationKeySpecifier);
    fields?: MutationFieldPolicy;
  };
  Root?: Omit<TypePolicy, 'fields' | 'keyFields'> & {
    keyFields?: false | RootKeySpecifier | (() => undefined | RootKeySpecifier);
    fields?: RootFieldPolicy;
  };
};
export type TypedTypePolicies = StrictTypedTypePolicies & TypePolicies;
